Terminals unused in grammar

    DO
    KW_UNTYPED


State 61 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 66 conflicts: 2 shift/reduce
State 92 conflicts: 16 reduce/reduce
State 156 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 167 conflicts: 2 shift/reduce


Grammar

    0 $accept: PROG $end

    1 PROG: KW_MODULE IDENTIFIER ';' GLOBALS

    2 GLOBALS: %empty
    3        | GLOBAL GLOBALS
    4        | KW_EXTERN GLOBAL GLOBALS

    5 GLOBAL: FUNCTION
    6       | DECLARATIONBLOCK ';'

    7 FUNCTION: FUNCTIONHEADER FUNCTIONREST

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER ':' PARAMLIST '-' '>' RETURNTYPE

    9 FUNCTIONREST: ';'
   10             | BLOCK

   11 MODIFIERS: %empty
   12          | KW_START

   13 PARAMLIST: KW_VOID
   14          | PARAMBLOCK MOREPARAMBLOCK

   15 PARAMBLOCK: TYPE PARAM MOREPARAM

   16 MOREPARAMBLOCK: %empty
   17               | ';' PARAMBLOCK MOREPARAMBLOCK

   18 MOREPARAM: %empty
   19          | ',' PARAM MOREPARAM

   20 PARAM: REFERENCE IDENTIFIER DIMENSIONBLOCK

   21 RETURNTYPE: TYPE REFERENCE DIMENSIONBLOCK

   22 REFERENCE: %empty
   23          | '*' REFERENCE

   24 DIMENSIONBLOCK: %empty
   25               | '[' ']' DIMENSIONBLOCK

   26 BLOCK: '{' CODE '}'

   27 CODE: %empty
   28     | BLOCK CODE
   29     | STATEMENT CODE

   30 STATEMENT: KW_LABEL IDENTIFIER ';'
   31          | ';'
   32          | KW_BREAK ';'
   33          | KW_CONTINUE ';'
   34          | KW_IF '(' EXPRESSION ')' BLOCK elseBLOCK
   35          | KW_GOTO IDENTIFIER ';'
   36          | KW_WHILE '(' EXPRESSION ')' KW_DO BLOCK
   37          | KW_DO BLOCK KW_WHILE '(' EXPRESSION ')'
   38          | KW_SWITCH '(' EXPRESSION ')' '{' SWITCHCASES KW_DEFAULT BLOCK '}'
   39          | KW_RETURN EXPRESSION ';'
   40          | EXPRESSION ';'
   41          | DECLARATIONBLOCK ';'

   42 elseBLOCK: %empty
   43          | KW_ELSE BLOCK

   44 SWITCHCASES: %empty
   45            | KW_CASE INT BLOCK SWITCHCASES

   46 DECLARATIONBLOCK: TYPE DECLARATION RESTDECLARATION

   47 DECLARATION: REFERENCE IDENTIFIER INDEXBLOCK INITIALIZER

   48 RESTDECLARATION: %empty
   49                | ',' DECLARATION RESTDECLARATION

   50 INDEXBLOCK: %empty
   51           | '[' INT ']' INDEXBLOCK

   52 INITIALIZER: %empty
   53            | '=' EXPRESSION

   54 EXPRESSION: LOGICALOR RESTEXPRESSION

   55 RESTEXPRESSION: %empty
   56               | '=' LOGICALOR RESTEXPRESSION

   57 LOGICALOR: LOGICALAND RESTLOGICALOR

   58 RESTLOGICALOR: %empty
   59              | '|' '|' LOGICALAND RESTLOGICALOR

   60 LOGICALAND: BITWISEOR RESTLOGICALAND

   61 RESTLOGICALAND: %empty
   62               | '&' '&' BITWISEOR RESTLOGICALAND

   63 BITWISEOR: BITWISEXOR RESTBITWISEOR

   64 RESTBITWISEOR: %empty
   65              | '|' BITWISEXOR RESTBITWISEOR

   66 BITWISEXOR: BITWISEAND RESTBITWISEXOR

   67 RESTBITWISEXOR: %empty
   68               | '^' BITWISEAND RESTBITWISEXOR

   69 BITWISEAND: EQUALITY RESTBITWISEAND

   70 RESTBITWISEAND: %empty
   71               | '&' EQUALITY RESTBITWISEAND

   72 EQUALITY: RELATION RESTEQUALITY

   73 RESTEQUALITY: %empty
   74             | EQUALITYOPERATOR RELATION RESTEQUALITY

   75 EQUALITYOPERATOR: '=' '='
   76                 | '!' '='

   77 RELATION: SHIFT RESTRELATION

   78 RESTRELATION: %empty
   79             | RELATIONOPERATOR SHIFT RESTRELATION

   80 RELATIONOPERATOR: '<'
   81                 | '<' '='
   82                 | '>'
   83                 | '>' '='

   84 SHIFT: ADDITION RESTSHIFT

   85 RESTSHIFT: %empty
   86          | SHIFTOPERATOR ADDITION RESTSHIFT

   87 SHIFTOPERATOR: '<' '<'
   88              | '>' '>'

   89 ADDITION: MULTIPLICATION RESTADDITION

   90 RESTADDITION: %empty
   91             | ADDITIONOPERATOR MULTIPLICATION RESTADDITION

   92 ADDITIONOPERATOR: '+'
   93                 | '-'

   94 MULTIPLICATION: UNARY3 RESTMULTIPLICATION

   95 RESTMULTIPLICATION: %empty
   96                   | MULTIPLICATIONOPERATOR UNARY3 RESTMULTIPLICATION

   97 MULTIPLICATIONOPERATOR: '*'
   98                       | '/'
   99                       | '%'

  100 UNARY3: UNARY2
  101       | '&' UNARY2
  102       | '*' UNARY2
  103       | '-' UNARY2

  104 UNARY2: FACTOR
  105       | '+' FACTOR
  106       | '-' FACTOR
  107       | '!' FACTOR

  108 FACTOR: IDENTIFIER APPLICATION
  109       | IMMEDIATE
  110       | '(' EXPRESSION ')'

  111 APPLICATION: %empty
  112            | '[' EXPRESSION ']' APPLICATION
  113            | '(' EXPRESSION MOREEXPRESSION ')'

  114 MOREEXPRESSION: %empty
  115               | ',' EXPRESSION MOREEXPRESSION

  116 TYPE: KW_BOOL
  117     | KW_CHAR
  118     | KW_FLOAT
  119     | KW_INT

  120 IMMEDIATE: KW_TRUE
  121          | KW_FALSE
  122          | CHAR
  123          | FLOAT
  124          | INT


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 76 107
    '%' (37) 99
    '&' (38) 62 71 101
    '(' (40) 34 36 37 38 110 113
    ')' (41) 34 36 37 38 110 113
    '*' (42) 23 97 102
    '+' (43) 92 105
    ',' (44) 19 49 115
    '-' (45) 8 93 103 106
    '/' (47) 98
    ':' (58) 8
    ';' (59) 1 6 9 17 30 31 32 33 35 39 40 41
    '<' (60) 80 81 87
    '=' (61) 53 56 75 76 81 83
    '>' (62) 8 82 83 88
    '[' (91) 25 51 112
    ']' (93) 25 51 112
    '^' (94) 68
    '{' (123) 26 38
    '|' (124) 59 65
    '}' (125) 26 38
    error (256)
    KW_MODULE (258) 1
    IDENTIFIER (259) 1 8 20 30 35 47 108
    KW_EXTERN (260) 4
    KW_VOID (261) 13
    KW_START (262) 12
    KW_LABEL (263) 30
    KW_BREAK (264) 32
    KW_CONTINUE (265) 33
    KW_IF (266) 34
    KW_GOTO (267) 35
    KW_WHILE (268) 36 37
    DO (269)
    KW_SWITCH (270) 38
    KW_DEFAULT (271) 38
    KW_RETURN (272) 39
    KW_ELSE (273) 43
    KW_CASE (274) 45
    KW_BOOL (275) 116
    KW_CHAR (276) 117
    KW_DO (277) 36 37
    KW_FLOAT (278) 118
    KW_INT (279) 119
    KW_UNTYPED (280)
    KW_TRUE (281) 120
    KW_FALSE (282) 121
    INT (283) 45 51 124
    FLOAT (284) 123
    CHAR (285) 122


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    PROG (53)
        on left: 1
        on right: 0
    GLOBALS (54)
        on left: 2 3 4
        on right: 1 3 4
    GLOBAL (55)
        on left: 5 6
        on right: 3 4
    FUNCTION (56)
        on left: 7
        on right: 5
    FUNCTIONHEADER (57)
        on left: 8
        on right: 7
    FUNCTIONREST (58)
        on left: 9 10
        on right: 7
    MODIFIERS (59)
        on left: 11 12
        on right: 8
    PARAMLIST (60)
        on left: 13 14
        on right: 8
    PARAMBLOCK (61)
        on left: 15
        on right: 14 17
    MOREPARAMBLOCK (62)
        on left: 16 17
        on right: 14 17
    MOREPARAM (63)
        on left: 18 19
        on right: 15 19
    PARAM (64)
        on left: 20
        on right: 15 19
    RETURNTYPE (65)
        on left: 21
        on right: 8
    REFERENCE (66)
        on left: 22 23
        on right: 20 21 23 47
    DIMENSIONBLOCK (67)
        on left: 24 25
        on right: 20 21 25
    BLOCK (68)
        on left: 26
        on right: 10 28 34 36 37 38 43 45
    CODE (69)
        on left: 27 28 29
        on right: 26 28 29
    STATEMENT (70)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 29
    elseBLOCK (71)
        on left: 42 43
        on right: 34
    SWITCHCASES (72)
        on left: 44 45
        on right: 38 45
    DECLARATIONBLOCK (73)
        on left: 46
        on right: 6 41
    DECLARATION (74)
        on left: 47
        on right: 46 49
    RESTDECLARATION (75)
        on left: 48 49
        on right: 46 49
    INDEXBLOCK (76)
        on left: 50 51
        on right: 47 51
    INITIALIZER (77)
        on left: 52 53
        on right: 47
    EXPRESSION (78)
        on left: 54
        on right: 34 36 37 38 39 40 53 110 112 113 115
    RESTEXPRESSION (79)
        on left: 55 56
        on right: 54 56
    LOGICALOR (80)
        on left: 57
        on right: 54 56
    RESTLOGICALOR (81)
        on left: 58 59
        on right: 57 59
    LOGICALAND (82)
        on left: 60
        on right: 57 59
    RESTLOGICALAND (83)
        on left: 61 62
        on right: 60 62
    BITWISEOR (84)
        on left: 63
        on right: 60 62
    RESTBITWISEOR (85)
        on left: 64 65
        on right: 63 65
    BITWISEXOR (86)
        on left: 66
        on right: 63 65
    RESTBITWISEXOR (87)
        on left: 67 68
        on right: 66 68
    BITWISEAND (88)
        on left: 69
        on right: 66 68
    RESTBITWISEAND (89)
        on left: 70 71
        on right: 69 71
    EQUALITY (90)
        on left: 72
        on right: 69 71
    RESTEQUALITY (91)
        on left: 73 74
        on right: 72 74
    EQUALITYOPERATOR (92)
        on left: 75 76
        on right: 74
    RELATION (93)
        on left: 77
        on right: 72 74
    RESTRELATION (94)
        on left: 78 79
        on right: 77 79
    RELATIONOPERATOR (95)
        on left: 80 81 82 83
        on right: 79
    SHIFT (96)
        on left: 84
        on right: 77 79
    RESTSHIFT (97)
        on left: 85 86
        on right: 84 86
    SHIFTOPERATOR (98)
        on left: 87 88
        on right: 86
    ADDITION (99)
        on left: 89
        on right: 84 86
    RESTADDITION (100)
        on left: 90 91
        on right: 89 91
    ADDITIONOPERATOR (101)
        on left: 92 93
        on right: 91
    MULTIPLICATION (102)
        on left: 94
        on right: 89 91
    RESTMULTIPLICATION (103)
        on left: 95 96
        on right: 94 96
    MULTIPLICATIONOPERATOR (104)
        on left: 97 98 99
        on right: 96
    UNARY3 (105)
        on left: 100 101 102 103
        on right: 94 96
    UNARY2 (106)
        on left: 104 105 106 107
        on right: 100 101 102 103
    FACTOR (107)
        on left: 108 109 110
        on right: 104 105 106 107
    APPLICATION (108)
        on left: 111 112 113
        on right: 108 112
    MOREEXPRESSION (109)
        on left: 114 115
        on right: 113 115
    TYPE (110)
        on left: 116 117 118 119
        on right: 15 21 46
    IMMEDIATE (111)
        on left: 120 121 122 123 124
        on right: 109


State 0

    0 $accept: . PROG $end

    KW_MODULE  shift, and go to state 1

    PROG  go to state 2


State 1

    1 PROG: KW_MODULE . IDENTIFIER ';' GLOBALS

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: PROG . $end

    $end  shift, and go to state 4


State 3

    1 PROG: KW_MODULE IDENTIFIER . ';' GLOBALS

    ';'  shift, and go to state 5


State 4

    0 $accept: PROG $end .

    $default  accept


State 5

    1 PROG: KW_MODULE IDENTIFIER ';' . GLOBALS

    KW_EXTERN  shift, and go to state 6
    KW_START   shift, and go to state 7
    KW_BOOL    shift, and go to state 8
    KW_CHAR    shift, and go to state 9
    KW_FLOAT   shift, and go to state 10
    KW_INT     shift, and go to state 11

    IDENTIFIER  reduce using rule 11 (MODIFIERS)
    $default    reduce using rule 2 (GLOBALS)

    GLOBALS           go to state 12
    GLOBAL            go to state 13
    FUNCTION          go to state 14
    FUNCTIONHEADER    go to state 15
    MODIFIERS         go to state 16
    DECLARATIONBLOCK  go to state 17
    TYPE              go to state 18


State 6

    4 GLOBALS: KW_EXTERN . GLOBAL GLOBALS

    KW_START  shift, and go to state 7
    KW_BOOL   shift, and go to state 8
    KW_CHAR   shift, and go to state 9
    KW_FLOAT  shift, and go to state 10
    KW_INT    shift, and go to state 11

    $default  reduce using rule 11 (MODIFIERS)

    GLOBAL            go to state 19
    FUNCTION          go to state 14
    FUNCTIONHEADER    go to state 15
    MODIFIERS         go to state 16
    DECLARATIONBLOCK  go to state 17
    TYPE              go to state 18


State 7

   12 MODIFIERS: KW_START .

    $default  reduce using rule 12 (MODIFIERS)


State 8

  116 TYPE: KW_BOOL .

    $default  reduce using rule 116 (TYPE)


State 9

  117 TYPE: KW_CHAR .

    $default  reduce using rule 117 (TYPE)


State 10

  118 TYPE: KW_FLOAT .

    $default  reduce using rule 118 (TYPE)


State 11

  119 TYPE: KW_INT .

    $default  reduce using rule 119 (TYPE)


State 12

    1 PROG: KW_MODULE IDENTIFIER ';' GLOBALS .

    $default  reduce using rule 1 (PROG)


State 13

    3 GLOBALS: GLOBAL . GLOBALS

    KW_EXTERN  shift, and go to state 6
    KW_START   shift, and go to state 7
    KW_BOOL    shift, and go to state 8
    KW_CHAR    shift, and go to state 9
    KW_FLOAT   shift, and go to state 10
    KW_INT     shift, and go to state 11

    IDENTIFIER  reduce using rule 11 (MODIFIERS)
    $default    reduce using rule 2 (GLOBALS)

    GLOBALS           go to state 20
    GLOBAL            go to state 13
    FUNCTION          go to state 14
    FUNCTIONHEADER    go to state 15
    MODIFIERS         go to state 16
    DECLARATIONBLOCK  go to state 17
    TYPE              go to state 18


State 14

    5 GLOBAL: FUNCTION .

    $default  reduce using rule 5 (GLOBAL)


State 15

    7 FUNCTION: FUNCTIONHEADER . FUNCTIONREST

    ';'  shift, and go to state 21
    '{'  shift, and go to state 22

    FUNCTIONREST  go to state 23
    BLOCK         go to state 24


State 16

    8 FUNCTIONHEADER: MODIFIERS . IDENTIFIER ':' PARAMLIST '-' '>' RETURNTYPE

    IDENTIFIER  shift, and go to state 25


State 17

    6 GLOBAL: DECLARATIONBLOCK . ';'

    ';'  shift, and go to state 26


State 18

   46 DECLARATIONBLOCK: TYPE . DECLARATION RESTDECLARATION

    '*'  shift, and go to state 27

    $default  reduce using rule 22 (REFERENCE)

    REFERENCE    go to state 28
    DECLARATION  go to state 29


State 19

    4 GLOBALS: KW_EXTERN GLOBAL . GLOBALS

    KW_EXTERN  shift, and go to state 6
    KW_START   shift, and go to state 7
    KW_BOOL    shift, and go to state 8
    KW_CHAR    shift, and go to state 9
    KW_FLOAT   shift, and go to state 10
    KW_INT     shift, and go to state 11

    IDENTIFIER  reduce using rule 11 (MODIFIERS)
    $default    reduce using rule 2 (GLOBALS)

    GLOBALS           go to state 30
    GLOBAL            go to state 13
    FUNCTION          go to state 14
    FUNCTIONHEADER    go to state 15
    MODIFIERS         go to state 16
    DECLARATIONBLOCK  go to state 17
    TYPE              go to state 18


State 20

    3 GLOBALS: GLOBAL GLOBALS .

    $default  reduce using rule 3 (GLOBALS)


State 21

    9 FUNCTIONREST: ';' .

    $default  reduce using rule 9 (FUNCTIONREST)


State 22

   26 BLOCK: '{' . CODE '}'

    IDENTIFIER   shift, and go to state 31
    KW_LABEL     shift, and go to state 32
    KW_BREAK     shift, and go to state 33
    KW_CONTINUE  shift, and go to state 34
    KW_IF        shift, and go to state 35
    KW_GOTO      shift, and go to state 36
    KW_WHILE     shift, and go to state 37
    KW_SWITCH    shift, and go to state 38
    KW_RETURN    shift, and go to state 39
    KW_BOOL      shift, and go to state 8
    KW_CHAR      shift, and go to state 9
    KW_DO        shift, and go to state 40
    KW_FLOAT     shift, and go to state 10
    KW_INT       shift, and go to state 11
    KW_TRUE      shift, and go to state 41
    KW_FALSE     shift, and go to state 42
    INT          shift, and go to state 43
    FLOAT        shift, and go to state 44
    CHAR         shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '*'          shift, and go to state 48
    '!'          shift, and go to state 49
    ';'          shift, and go to state 50
    '{'          shift, and go to state 22
    '('          shift, and go to state 51
    '&'          shift, and go to state 52

    $default  reduce using rule 27 (CODE)

    BLOCK             go to state 53
    CODE              go to state 54
    STATEMENT         go to state 55
    DECLARATIONBLOCK  go to state 56
    EXPRESSION        go to state 57
    LOGICALOR         go to state 58
    LOGICALAND        go to state 59
    BITWISEOR         go to state 60
    BITWISEXOR        go to state 61
    BITWISEAND        go to state 62
    EQUALITY          go to state 63
    RELATION          go to state 64
    SHIFT             go to state 65
    ADDITION          go to state 66
    MULTIPLICATION    go to state 67
    UNARY3            go to state 68
    UNARY2            go to state 69
    FACTOR            go to state 70
    TYPE              go to state 18
    IMMEDIATE         go to state 71


State 23

    7 FUNCTION: FUNCTIONHEADER FUNCTIONREST .

    $default  reduce using rule 7 (FUNCTION)


State 24

   10 FUNCTIONREST: BLOCK .

    $default  reduce using rule 10 (FUNCTIONREST)


State 25

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER . ':' PARAMLIST '-' '>' RETURNTYPE

    ':'  shift, and go to state 72


State 26

    6 GLOBAL: DECLARATIONBLOCK ';' .

    $default  reduce using rule 6 (GLOBAL)


State 27

   23 REFERENCE: '*' . REFERENCE

    '*'  shift, and go to state 27

    $default  reduce using rule 22 (REFERENCE)

    REFERENCE  go to state 73


State 28

   47 DECLARATION: REFERENCE . IDENTIFIER INDEXBLOCK INITIALIZER

    IDENTIFIER  shift, and go to state 74


State 29

   46 DECLARATIONBLOCK: TYPE DECLARATION . RESTDECLARATION

    ','  shift, and go to state 75

    $default  reduce using rule 48 (RESTDECLARATION)

    RESTDECLARATION  go to state 76


State 30

    4 GLOBALS: KW_EXTERN GLOBAL GLOBALS .

    $default  reduce using rule 4 (GLOBALS)


State 31

  108 FACTOR: IDENTIFIER . APPLICATION

    '['  shift, and go to state 77
    '('  shift, and go to state 78

    $default  reduce using rule 111 (APPLICATION)

    APPLICATION  go to state 79


State 32

   30 STATEMENT: KW_LABEL . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 80


State 33

   32 STATEMENT: KW_BREAK . ';'

    ';'  shift, and go to state 81


State 34

   33 STATEMENT: KW_CONTINUE . ';'

    ';'  shift, and go to state 82


State 35

   34 STATEMENT: KW_IF . '(' EXPRESSION ')' BLOCK elseBLOCK

    '('  shift, and go to state 83


State 36

   35 STATEMENT: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 84


State 37

   36 STATEMENT: KW_WHILE . '(' EXPRESSION ')' KW_DO BLOCK

    '('  shift, and go to state 85


State 38

   38 STATEMENT: KW_SWITCH . '(' EXPRESSION ')' '{' SWITCHCASES KW_DEFAULT BLOCK '}'

    '('  shift, and go to state 86


State 39

   39 STATEMENT: KW_RETURN . EXPRESSION ';'

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 87
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 40

   37 STATEMENT: KW_DO . BLOCK KW_WHILE '(' EXPRESSION ')'

    '{'  shift, and go to state 22

    BLOCK  go to state 88


State 41

  120 IMMEDIATE: KW_TRUE .

    $default  reduce using rule 120 (IMMEDIATE)


State 42

  121 IMMEDIATE: KW_FALSE .

    $default  reduce using rule 121 (IMMEDIATE)


State 43

  124 IMMEDIATE: INT .

    $default  reduce using rule 124 (IMMEDIATE)


State 44

  123 IMMEDIATE: FLOAT .

    $default  reduce using rule 123 (IMMEDIATE)


State 45

  122 IMMEDIATE: CHAR .

    $default  reduce using rule 122 (IMMEDIATE)


State 46

  105 UNARY2: '+' . FACTOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '('         shift, and go to state 51

    FACTOR     go to state 89
    IMMEDIATE  go to state 71


State 47

  103 UNARY3: '-' . UNARY2
  106 UNARY2: '-' . FACTOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 90
    '!'         shift, and go to state 49
    '('         shift, and go to state 51

    UNARY2     go to state 91
    FACTOR     go to state 92
    IMMEDIATE  go to state 71


State 48

  102 UNARY3: '*' . UNARY2

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 90
    '!'         shift, and go to state 49
    '('         shift, and go to state 51

    UNARY2     go to state 93
    FACTOR     go to state 70
    IMMEDIATE  go to state 71


State 49

  107 UNARY2: '!' . FACTOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '('         shift, and go to state 51

    FACTOR     go to state 94
    IMMEDIATE  go to state 71


State 50

   31 STATEMENT: ';' .

    $default  reduce using rule 31 (STATEMENT)


State 51

  110 FACTOR: '(' . EXPRESSION ')'

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 95
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 52

  101 UNARY3: '&' . UNARY2

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 90
    '!'         shift, and go to state 49
    '('         shift, and go to state 51

    UNARY2     go to state 96
    FACTOR     go to state 70
    IMMEDIATE  go to state 71


State 53

   28 CODE: BLOCK . CODE

    IDENTIFIER   shift, and go to state 31
    KW_LABEL     shift, and go to state 32
    KW_BREAK     shift, and go to state 33
    KW_CONTINUE  shift, and go to state 34
    KW_IF        shift, and go to state 35
    KW_GOTO      shift, and go to state 36
    KW_WHILE     shift, and go to state 37
    KW_SWITCH    shift, and go to state 38
    KW_RETURN    shift, and go to state 39
    KW_BOOL      shift, and go to state 8
    KW_CHAR      shift, and go to state 9
    KW_DO        shift, and go to state 40
    KW_FLOAT     shift, and go to state 10
    KW_INT       shift, and go to state 11
    KW_TRUE      shift, and go to state 41
    KW_FALSE     shift, and go to state 42
    INT          shift, and go to state 43
    FLOAT        shift, and go to state 44
    CHAR         shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '*'          shift, and go to state 48
    '!'          shift, and go to state 49
    ';'          shift, and go to state 50
    '{'          shift, and go to state 22
    '('          shift, and go to state 51
    '&'          shift, and go to state 52

    $default  reduce using rule 27 (CODE)

    BLOCK             go to state 53
    CODE              go to state 97
    STATEMENT         go to state 55
    DECLARATIONBLOCK  go to state 56
    EXPRESSION        go to state 57
    LOGICALOR         go to state 58
    LOGICALAND        go to state 59
    BITWISEOR         go to state 60
    BITWISEXOR        go to state 61
    BITWISEAND        go to state 62
    EQUALITY          go to state 63
    RELATION          go to state 64
    SHIFT             go to state 65
    ADDITION          go to state 66
    MULTIPLICATION    go to state 67
    UNARY3            go to state 68
    UNARY2            go to state 69
    FACTOR            go to state 70
    TYPE              go to state 18
    IMMEDIATE         go to state 71


State 54

   26 BLOCK: '{' CODE . '}'

    '}'  shift, and go to state 98


State 55

   29 CODE: STATEMENT . CODE

    IDENTIFIER   shift, and go to state 31
    KW_LABEL     shift, and go to state 32
    KW_BREAK     shift, and go to state 33
    KW_CONTINUE  shift, and go to state 34
    KW_IF        shift, and go to state 35
    KW_GOTO      shift, and go to state 36
    KW_WHILE     shift, and go to state 37
    KW_SWITCH    shift, and go to state 38
    KW_RETURN    shift, and go to state 39
    KW_BOOL      shift, and go to state 8
    KW_CHAR      shift, and go to state 9
    KW_DO        shift, and go to state 40
    KW_FLOAT     shift, and go to state 10
    KW_INT       shift, and go to state 11
    KW_TRUE      shift, and go to state 41
    KW_FALSE     shift, and go to state 42
    INT          shift, and go to state 43
    FLOAT        shift, and go to state 44
    CHAR         shift, and go to state 45
    '+'          shift, and go to state 46
    '-'          shift, and go to state 47
    '*'          shift, and go to state 48
    '!'          shift, and go to state 49
    ';'          shift, and go to state 50
    '{'          shift, and go to state 22
    '('          shift, and go to state 51
    '&'          shift, and go to state 52

    $default  reduce using rule 27 (CODE)

    BLOCK             go to state 53
    CODE              go to state 99
    STATEMENT         go to state 55
    DECLARATIONBLOCK  go to state 56
    EXPRESSION        go to state 57
    LOGICALOR         go to state 58
    LOGICALAND        go to state 59
    BITWISEOR         go to state 60
    BITWISEXOR        go to state 61
    BITWISEAND        go to state 62
    EQUALITY          go to state 63
    RELATION          go to state 64
    SHIFT             go to state 65
    ADDITION          go to state 66
    MULTIPLICATION    go to state 67
    UNARY3            go to state 68
    UNARY2            go to state 69
    FACTOR            go to state 70
    TYPE              go to state 18
    IMMEDIATE         go to state 71


State 56

   41 STATEMENT: DECLARATIONBLOCK . ';'

    ';'  shift, and go to state 100


State 57

   40 STATEMENT: EXPRESSION . ';'

    ';'  shift, and go to state 101


State 58

   54 EXPRESSION: LOGICALOR . RESTEXPRESSION

    '='  shift, and go to state 102

    $default  reduce using rule 55 (RESTEXPRESSION)

    RESTEXPRESSION  go to state 103


State 59

   57 LOGICALOR: LOGICALAND . RESTLOGICALOR

    '|'  shift, and go to state 104

    $default  reduce using rule 58 (RESTLOGICALOR)

    RESTLOGICALOR  go to state 105


State 60

   60 LOGICALAND: BITWISEOR . RESTLOGICALAND

    '&'  shift, and go to state 106

    $default  reduce using rule 61 (RESTLOGICALAND)

    RESTLOGICALAND  go to state 107


State 61

   63 BITWISEOR: BITWISEXOR . RESTBITWISEOR

    '|'  shift, and go to state 108

    '|'       [reduce using rule 64 (RESTBITWISEOR)]
    $default  reduce using rule 64 (RESTBITWISEOR)

    RESTBITWISEOR  go to state 109


State 62

   66 BITWISEXOR: BITWISEAND . RESTBITWISEXOR

    '^'  shift, and go to state 110

    $default  reduce using rule 67 (RESTBITWISEXOR)

    RESTBITWISEXOR  go to state 111


State 63

   69 BITWISEAND: EQUALITY . RESTBITWISEAND

    '&'  shift, and go to state 112

    '&'       [reduce using rule 70 (RESTBITWISEAND)]
    $default  reduce using rule 70 (RESTBITWISEAND)

    RESTBITWISEAND  go to state 113


State 64

   72 EQUALITY: RELATION . RESTEQUALITY

    '!'  shift, and go to state 114
    '='  shift, and go to state 115

    '='       [reduce using rule 73 (RESTEQUALITY)]
    $default  reduce using rule 73 (RESTEQUALITY)

    RESTEQUALITY      go to state 116
    EQUALITYOPERATOR  go to state 117


State 65

   77 RELATION: SHIFT . RESTRELATION

    '>'  shift, and go to state 118
    '<'  shift, and go to state 119

    $default  reduce using rule 78 (RESTRELATION)

    RESTRELATION      go to state 120
    RELATIONOPERATOR  go to state 121


State 66

   84 SHIFT: ADDITION . RESTSHIFT

    '>'  shift, and go to state 122
    '<'  shift, and go to state 123

    '>'       [reduce using rule 85 (RESTSHIFT)]
    '<'       [reduce using rule 85 (RESTSHIFT)]
    $default  reduce using rule 85 (RESTSHIFT)

    RESTSHIFT      go to state 124
    SHIFTOPERATOR  go to state 125


State 67

   89 ADDITION: MULTIPLICATION . RESTADDITION

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 90 (RESTADDITION)

    RESTADDITION      go to state 128
    ADDITIONOPERATOR  go to state 129


State 68

   94 MULTIPLICATION: UNARY3 . RESTMULTIPLICATION

    '*'  shift, and go to state 130
    '/'  shift, and go to state 131
    '%'  shift, and go to state 132

    $default  reduce using rule 95 (RESTMULTIPLICATION)

    RESTMULTIPLICATION      go to state 133
    MULTIPLICATIONOPERATOR  go to state 134


State 69

  100 UNARY3: UNARY2 .

    $default  reduce using rule 100 (UNARY3)


State 70

  104 UNARY2: FACTOR .

    $default  reduce using rule 104 (UNARY2)


State 71

  109 FACTOR: IMMEDIATE .

    $default  reduce using rule 109 (FACTOR)


State 72

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER ':' . PARAMLIST '-' '>' RETURNTYPE

    KW_VOID   shift, and go to state 135
    KW_BOOL   shift, and go to state 8
    KW_CHAR   shift, and go to state 9
    KW_FLOAT  shift, and go to state 10
    KW_INT    shift, and go to state 11

    PARAMLIST   go to state 136
    PARAMBLOCK  go to state 137
    TYPE        go to state 138


State 73

   23 REFERENCE: '*' REFERENCE .

    $default  reduce using rule 23 (REFERENCE)


State 74

   47 DECLARATION: REFERENCE IDENTIFIER . INDEXBLOCK INITIALIZER

    '['  shift, and go to state 139

    $default  reduce using rule 50 (INDEXBLOCK)

    INDEXBLOCK  go to state 140


State 75

   49 RESTDECLARATION: ',' . DECLARATION RESTDECLARATION

    '*'  shift, and go to state 27

    $default  reduce using rule 22 (REFERENCE)

    REFERENCE    go to state 28
    DECLARATION  go to state 141


State 76

   46 DECLARATIONBLOCK: TYPE DECLARATION RESTDECLARATION .

    $default  reduce using rule 46 (DECLARATIONBLOCK)


State 77

  112 APPLICATION: '[' . EXPRESSION ']' APPLICATION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 142
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 78

  113 APPLICATION: '(' . EXPRESSION MOREEXPRESSION ')'

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 143
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 79

  108 FACTOR: IDENTIFIER APPLICATION .

    $default  reduce using rule 108 (FACTOR)


State 80

   30 STATEMENT: KW_LABEL IDENTIFIER . ';'

    ';'  shift, and go to state 144


State 81

   32 STATEMENT: KW_BREAK ';' .

    $default  reduce using rule 32 (STATEMENT)


State 82

   33 STATEMENT: KW_CONTINUE ';' .

    $default  reduce using rule 33 (STATEMENT)


State 83

   34 STATEMENT: KW_IF '(' . EXPRESSION ')' BLOCK elseBLOCK

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 145
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 84

   35 STATEMENT: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 146


State 85

   36 STATEMENT: KW_WHILE '(' . EXPRESSION ')' KW_DO BLOCK

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 147
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 86

   38 STATEMENT: KW_SWITCH '(' . EXPRESSION ')' '{' SWITCHCASES KW_DEFAULT BLOCK '}'

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 148
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 87

   39 STATEMENT: KW_RETURN EXPRESSION . ';'

    ';'  shift, and go to state 149


State 88

   37 STATEMENT: KW_DO BLOCK . KW_WHILE '(' EXPRESSION ')'

    KW_WHILE  shift, and go to state 150


State 89

  105 UNARY2: '+' FACTOR .

    $default  reduce using rule 105 (UNARY2)


State 90

  106 UNARY2: '-' . FACTOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '('         shift, and go to state 51

    FACTOR     go to state 151
    IMMEDIATE  go to state 71


State 91

  103 UNARY3: '-' UNARY2 .

    $default  reduce using rule 103 (UNARY3)


State 92

  104 UNARY2: FACTOR .
  106       | '-' FACTOR .

    '+'       reduce using rule 104 (UNARY2)
    '+'       [reduce using rule 106 (UNARY2)]
    '-'       reduce using rule 104 (UNARY2)
    '-'       [reduce using rule 106 (UNARY2)]
    '*'       reduce using rule 104 (UNARY2)
    '*'       [reduce using rule 106 (UNARY2)]
    '/'       reduce using rule 104 (UNARY2)
    '/'       [reduce using rule 106 (UNARY2)]
    '!'       reduce using rule 104 (UNARY2)
    '!'       [reduce using rule 106 (UNARY2)]
    ';'       reduce using rule 104 (UNARY2)
    ';'       [reduce using rule 106 (UNARY2)]
    '>'       reduce using rule 104 (UNARY2)
    '>'       [reduce using rule 106 (UNARY2)]
    ','       reduce using rule 104 (UNARY2)
    ','       [reduce using rule 106 (UNARY2)]
    ']'       reduce using rule 104 (UNARY2)
    ']'       [reduce using rule 106 (UNARY2)]
    ')'       reduce using rule 104 (UNARY2)
    ')'       [reduce using rule 106 (UNARY2)]
    '='       reduce using rule 104 (UNARY2)
    '='       [reduce using rule 106 (UNARY2)]
    '|'       reduce using rule 104 (UNARY2)
    '|'       [reduce using rule 106 (UNARY2)]
    '&'       reduce using rule 104 (UNARY2)
    '&'       [reduce using rule 106 (UNARY2)]
    '^'       reduce using rule 104 (UNARY2)
    '^'       [reduce using rule 106 (UNARY2)]
    '<'       reduce using rule 104 (UNARY2)
    '<'       [reduce using rule 106 (UNARY2)]
    '%'       reduce using rule 104 (UNARY2)
    '%'       [reduce using rule 106 (UNARY2)]
    $default  reduce using rule 104 (UNARY2)


State 93

  102 UNARY3: '*' UNARY2 .

    $default  reduce using rule 102 (UNARY3)


State 94

  107 UNARY2: '!' FACTOR .

    $default  reduce using rule 107 (UNARY2)


State 95

  110 FACTOR: '(' EXPRESSION . ')'

    ')'  shift, and go to state 152


State 96

  101 UNARY3: '&' UNARY2 .

    $default  reduce using rule 101 (UNARY3)


State 97

   28 CODE: BLOCK CODE .

    $default  reduce using rule 28 (CODE)


State 98

   26 BLOCK: '{' CODE '}' .

    $default  reduce using rule 26 (BLOCK)


State 99

   29 CODE: STATEMENT CODE .

    $default  reduce using rule 29 (CODE)


State 100

   41 STATEMENT: DECLARATIONBLOCK ';' .

    $default  reduce using rule 41 (STATEMENT)


State 101

   40 STATEMENT: EXPRESSION ';' .

    $default  reduce using rule 40 (STATEMENT)


State 102

   56 RESTEXPRESSION: '=' . LOGICALOR RESTEXPRESSION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    LOGICALOR       go to state 153
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 103

   54 EXPRESSION: LOGICALOR RESTEXPRESSION .

    $default  reduce using rule 54 (EXPRESSION)


State 104

   59 RESTLOGICALOR: '|' . '|' LOGICALAND RESTLOGICALOR

    '|'  shift, and go to state 154


State 105

   57 LOGICALOR: LOGICALAND RESTLOGICALOR .

    $default  reduce using rule 57 (LOGICALOR)


State 106

   62 RESTLOGICALAND: '&' . '&' BITWISEOR RESTLOGICALAND

    '&'  shift, and go to state 155


State 107

   60 LOGICALAND: BITWISEOR RESTLOGICALAND .

    $default  reduce using rule 60 (LOGICALAND)


State 108

   65 RESTBITWISEOR: '|' . BITWISEXOR RESTBITWISEOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    BITWISEXOR      go to state 156
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 109

   63 BITWISEOR: BITWISEXOR RESTBITWISEOR .

    $default  reduce using rule 63 (BITWISEOR)


State 110

   68 RESTBITWISEXOR: '^' . BITWISEAND RESTBITWISEXOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    BITWISEAND      go to state 157
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 111

   66 BITWISEXOR: BITWISEAND RESTBITWISEXOR .

    $default  reduce using rule 66 (BITWISEXOR)


State 112

   71 RESTBITWISEAND: '&' . EQUALITY RESTBITWISEAND

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EQUALITY        go to state 158
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 113

   69 BITWISEAND: EQUALITY RESTBITWISEAND .

    $default  reduce using rule 69 (BITWISEAND)


State 114

   76 EQUALITYOPERATOR: '!' . '='

    '='  shift, and go to state 159


State 115

   75 EQUALITYOPERATOR: '=' . '='

    '='  shift, and go to state 160


State 116

   72 EQUALITY: RELATION RESTEQUALITY .

    $default  reduce using rule 72 (EQUALITY)


State 117

   74 RESTEQUALITY: EQUALITYOPERATOR . RELATION RESTEQUALITY

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    RELATION        go to state 161
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 118

   82 RELATIONOPERATOR: '>' .
   83                 | '>' . '='

    '='  shift, and go to state 162

    $default  reduce using rule 82 (RELATIONOPERATOR)


State 119

   80 RELATIONOPERATOR: '<' .
   81                 | '<' . '='

    '='  shift, and go to state 163

    $default  reduce using rule 80 (RELATIONOPERATOR)


State 120

   77 RELATION: SHIFT RESTRELATION .

    $default  reduce using rule 77 (RELATION)


State 121

   79 RESTRELATION: RELATIONOPERATOR . SHIFT RESTRELATION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    SHIFT           go to state 164
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 122

   88 SHIFTOPERATOR: '>' . '>'

    '>'  shift, and go to state 165


State 123

   87 SHIFTOPERATOR: '<' . '<'

    '<'  shift, and go to state 166


State 124

   84 SHIFT: ADDITION RESTSHIFT .

    $default  reduce using rule 84 (SHIFT)


State 125

   86 RESTSHIFT: SHIFTOPERATOR . ADDITION RESTSHIFT

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    ADDITION        go to state 167
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 126

   92 ADDITIONOPERATOR: '+' .

    $default  reduce using rule 92 (ADDITIONOPERATOR)


State 127

   93 ADDITIONOPERATOR: '-' .

    $default  reduce using rule 93 (ADDITIONOPERATOR)


State 128

   89 ADDITION: MULTIPLICATION RESTADDITION .

    $default  reduce using rule 89 (ADDITION)


State 129

   91 RESTADDITION: ADDITIONOPERATOR . MULTIPLICATION RESTADDITION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    MULTIPLICATION  go to state 168
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 130

   97 MULTIPLICATIONOPERATOR: '*' .

    $default  reduce using rule 97 (MULTIPLICATIONOPERATOR)


State 131

   98 MULTIPLICATIONOPERATOR: '/' .

    $default  reduce using rule 98 (MULTIPLICATIONOPERATOR)


State 132

   99 MULTIPLICATIONOPERATOR: '%' .

    $default  reduce using rule 99 (MULTIPLICATIONOPERATOR)


State 133

   94 MULTIPLICATION: UNARY3 RESTMULTIPLICATION .

    $default  reduce using rule 94 (MULTIPLICATION)


State 134

   96 RESTMULTIPLICATION: MULTIPLICATIONOPERATOR . UNARY3 RESTMULTIPLICATION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    UNARY3     go to state 169
    UNARY2     go to state 69
    FACTOR     go to state 70
    IMMEDIATE  go to state 71


State 135

   13 PARAMLIST: KW_VOID .

    $default  reduce using rule 13 (PARAMLIST)


State 136

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER ':' PARAMLIST . '-' '>' RETURNTYPE

    '-'  shift, and go to state 170


State 137

   14 PARAMLIST: PARAMBLOCK . MOREPARAMBLOCK

    ';'  shift, and go to state 171

    $default  reduce using rule 16 (MOREPARAMBLOCK)

    MOREPARAMBLOCK  go to state 172


State 138

   15 PARAMBLOCK: TYPE . PARAM MOREPARAM

    '*'  shift, and go to state 27

    $default  reduce using rule 22 (REFERENCE)

    PARAM      go to state 173
    REFERENCE  go to state 174


State 139

   51 INDEXBLOCK: '[' . INT ']' INDEXBLOCK

    INT  shift, and go to state 175


State 140

   47 DECLARATION: REFERENCE IDENTIFIER INDEXBLOCK . INITIALIZER

    '='  shift, and go to state 176

    $default  reduce using rule 52 (INITIALIZER)

    INITIALIZER  go to state 177


State 141

   49 RESTDECLARATION: ',' DECLARATION . RESTDECLARATION

    ','  shift, and go to state 75

    $default  reduce using rule 48 (RESTDECLARATION)

    RESTDECLARATION  go to state 178


State 142

  112 APPLICATION: '[' EXPRESSION . ']' APPLICATION

    ']'  shift, and go to state 179


State 143

  113 APPLICATION: '(' EXPRESSION . MOREEXPRESSION ')'

    ','  shift, and go to state 180

    $default  reduce using rule 114 (MOREEXPRESSION)

    MOREEXPRESSION  go to state 181


State 144

   30 STATEMENT: KW_LABEL IDENTIFIER ';' .

    $default  reduce using rule 30 (STATEMENT)


State 145

   34 STATEMENT: KW_IF '(' EXPRESSION . ')' BLOCK elseBLOCK

    ')'  shift, and go to state 182


State 146

   35 STATEMENT: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 35 (STATEMENT)


State 147

   36 STATEMENT: KW_WHILE '(' EXPRESSION . ')' KW_DO BLOCK

    ')'  shift, and go to state 183


State 148

   38 STATEMENT: KW_SWITCH '(' EXPRESSION . ')' '{' SWITCHCASES KW_DEFAULT BLOCK '}'

    ')'  shift, and go to state 184


State 149

   39 STATEMENT: KW_RETURN EXPRESSION ';' .

    $default  reduce using rule 39 (STATEMENT)


State 150

   37 STATEMENT: KW_DO BLOCK KW_WHILE . '(' EXPRESSION ')'

    '('  shift, and go to state 185


State 151

  106 UNARY2: '-' FACTOR .

    $default  reduce using rule 106 (UNARY2)


State 152

  110 FACTOR: '(' EXPRESSION ')' .

    $default  reduce using rule 110 (FACTOR)


State 153

   56 RESTEXPRESSION: '=' LOGICALOR . RESTEXPRESSION

    '='  shift, and go to state 102

    $default  reduce using rule 55 (RESTEXPRESSION)

    RESTEXPRESSION  go to state 186


State 154

   59 RESTLOGICALOR: '|' '|' . LOGICALAND RESTLOGICALOR

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    LOGICALAND      go to state 187
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 155

   62 RESTLOGICALAND: '&' '&' . BITWISEOR RESTLOGICALAND

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    BITWISEOR       go to state 188
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 156

   65 RESTBITWISEOR: '|' BITWISEXOR . RESTBITWISEOR

    '|'  shift, and go to state 108

    '|'       [reduce using rule 64 (RESTBITWISEOR)]
    $default  reduce using rule 64 (RESTBITWISEOR)

    RESTBITWISEOR  go to state 189


State 157

   68 RESTBITWISEXOR: '^' BITWISEAND . RESTBITWISEXOR

    '^'  shift, and go to state 110

    $default  reduce using rule 67 (RESTBITWISEXOR)

    RESTBITWISEXOR  go to state 190


State 158

   71 RESTBITWISEAND: '&' EQUALITY . RESTBITWISEAND

    '&'  shift, and go to state 112

    '&'       [reduce using rule 70 (RESTBITWISEAND)]
    $default  reduce using rule 70 (RESTBITWISEAND)

    RESTBITWISEAND  go to state 191


State 159

   76 EQUALITYOPERATOR: '!' '=' .

    $default  reduce using rule 76 (EQUALITYOPERATOR)


State 160

   75 EQUALITYOPERATOR: '=' '=' .

    $default  reduce using rule 75 (EQUALITYOPERATOR)


State 161

   74 RESTEQUALITY: EQUALITYOPERATOR RELATION . RESTEQUALITY

    '!'  shift, and go to state 114
    '='  shift, and go to state 115

    '='       [reduce using rule 73 (RESTEQUALITY)]
    $default  reduce using rule 73 (RESTEQUALITY)

    RESTEQUALITY      go to state 192
    EQUALITYOPERATOR  go to state 117


State 162

   83 RELATIONOPERATOR: '>' '=' .

    $default  reduce using rule 83 (RELATIONOPERATOR)


State 163

   81 RELATIONOPERATOR: '<' '=' .

    $default  reduce using rule 81 (RELATIONOPERATOR)


State 164

   79 RESTRELATION: RELATIONOPERATOR SHIFT . RESTRELATION

    '>'  shift, and go to state 118
    '<'  shift, and go to state 119

    $default  reduce using rule 78 (RESTRELATION)

    RESTRELATION      go to state 193
    RELATIONOPERATOR  go to state 121


State 165

   88 SHIFTOPERATOR: '>' '>' .

    $default  reduce using rule 88 (SHIFTOPERATOR)


State 166

   87 SHIFTOPERATOR: '<' '<' .

    $default  reduce using rule 87 (SHIFTOPERATOR)


State 167

   86 RESTSHIFT: SHIFTOPERATOR ADDITION . RESTSHIFT

    '>'  shift, and go to state 122
    '<'  shift, and go to state 123

    '>'       [reduce using rule 85 (RESTSHIFT)]
    '<'       [reduce using rule 85 (RESTSHIFT)]
    $default  reduce using rule 85 (RESTSHIFT)

    RESTSHIFT      go to state 194
    SHIFTOPERATOR  go to state 125


State 168

   91 RESTADDITION: ADDITIONOPERATOR MULTIPLICATION . RESTADDITION

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 90 (RESTADDITION)

    RESTADDITION      go to state 195
    ADDITIONOPERATOR  go to state 129


State 169

   96 RESTMULTIPLICATION: MULTIPLICATIONOPERATOR UNARY3 . RESTMULTIPLICATION

    '*'  shift, and go to state 130
    '/'  shift, and go to state 131
    '%'  shift, and go to state 132

    $default  reduce using rule 95 (RESTMULTIPLICATION)

    RESTMULTIPLICATION      go to state 196
    MULTIPLICATIONOPERATOR  go to state 134


State 170

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER ':' PARAMLIST '-' . '>' RETURNTYPE

    '>'  shift, and go to state 197


State 171

   17 MOREPARAMBLOCK: ';' . PARAMBLOCK MOREPARAMBLOCK

    KW_BOOL   shift, and go to state 8
    KW_CHAR   shift, and go to state 9
    KW_FLOAT  shift, and go to state 10
    KW_INT    shift, and go to state 11

    PARAMBLOCK  go to state 198
    TYPE        go to state 138


State 172

   14 PARAMLIST: PARAMBLOCK MOREPARAMBLOCK .

    $default  reduce using rule 14 (PARAMLIST)


State 173

   15 PARAMBLOCK: TYPE PARAM . MOREPARAM

    ','  shift, and go to state 199

    $default  reduce using rule 18 (MOREPARAM)

    MOREPARAM  go to state 200


State 174

   20 PARAM: REFERENCE . IDENTIFIER DIMENSIONBLOCK

    IDENTIFIER  shift, and go to state 201


State 175

   51 INDEXBLOCK: '[' INT . ']' INDEXBLOCK

    ']'  shift, and go to state 202


State 176

   53 INITIALIZER: '=' . EXPRESSION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 203
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 177

   47 DECLARATION: REFERENCE IDENTIFIER INDEXBLOCK INITIALIZER .

    $default  reduce using rule 47 (DECLARATION)


State 178

   49 RESTDECLARATION: ',' DECLARATION RESTDECLARATION .

    $default  reduce using rule 49 (RESTDECLARATION)


State 179

  112 APPLICATION: '[' EXPRESSION ']' . APPLICATION

    '['  shift, and go to state 77
    '('  shift, and go to state 78

    $default  reduce using rule 111 (APPLICATION)

    APPLICATION  go to state 204


State 180

  115 MOREEXPRESSION: ',' . EXPRESSION MOREEXPRESSION

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 205
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 181

  113 APPLICATION: '(' EXPRESSION MOREEXPRESSION . ')'

    ')'  shift, and go to state 206


State 182

   34 STATEMENT: KW_IF '(' EXPRESSION ')' . BLOCK elseBLOCK

    '{'  shift, and go to state 22

    BLOCK  go to state 207


State 183

   36 STATEMENT: KW_WHILE '(' EXPRESSION ')' . KW_DO BLOCK

    KW_DO  shift, and go to state 208


State 184

   38 STATEMENT: KW_SWITCH '(' EXPRESSION ')' . '{' SWITCHCASES KW_DEFAULT BLOCK '}'

    '{'  shift, and go to state 209


State 185

   37 STATEMENT: KW_DO BLOCK KW_WHILE '(' . EXPRESSION ')'

    IDENTIFIER  shift, and go to state 31
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    INT         shift, and go to state 43
    FLOAT       shift, and go to state 44
    CHAR        shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '*'         shift, and go to state 48
    '!'         shift, and go to state 49
    '('         shift, and go to state 51
    '&'         shift, and go to state 52

    EXPRESSION      go to state 210
    LOGICALOR       go to state 58
    LOGICALAND      go to state 59
    BITWISEOR       go to state 60
    BITWISEXOR      go to state 61
    BITWISEAND      go to state 62
    EQUALITY        go to state 63
    RELATION        go to state 64
    SHIFT           go to state 65
    ADDITION        go to state 66
    MULTIPLICATION  go to state 67
    UNARY3          go to state 68
    UNARY2          go to state 69
    FACTOR          go to state 70
    IMMEDIATE       go to state 71


State 186

   56 RESTEXPRESSION: '=' LOGICALOR RESTEXPRESSION .

    $default  reduce using rule 56 (RESTEXPRESSION)


State 187

   59 RESTLOGICALOR: '|' '|' LOGICALAND . RESTLOGICALOR

    '|'  shift, and go to state 104

    $default  reduce using rule 58 (RESTLOGICALOR)

    RESTLOGICALOR  go to state 211


State 188

   62 RESTLOGICALAND: '&' '&' BITWISEOR . RESTLOGICALAND

    '&'  shift, and go to state 106

    $default  reduce using rule 61 (RESTLOGICALAND)

    RESTLOGICALAND  go to state 212


State 189

   65 RESTBITWISEOR: '|' BITWISEXOR RESTBITWISEOR .

    $default  reduce using rule 65 (RESTBITWISEOR)


State 190

   68 RESTBITWISEXOR: '^' BITWISEAND RESTBITWISEXOR .

    $default  reduce using rule 68 (RESTBITWISEXOR)


State 191

   71 RESTBITWISEAND: '&' EQUALITY RESTBITWISEAND .

    $default  reduce using rule 71 (RESTBITWISEAND)


State 192

   74 RESTEQUALITY: EQUALITYOPERATOR RELATION RESTEQUALITY .

    $default  reduce using rule 74 (RESTEQUALITY)


State 193

   79 RESTRELATION: RELATIONOPERATOR SHIFT RESTRELATION .

    $default  reduce using rule 79 (RESTRELATION)


State 194

   86 RESTSHIFT: SHIFTOPERATOR ADDITION RESTSHIFT .

    $default  reduce using rule 86 (RESTSHIFT)


State 195

   91 RESTADDITION: ADDITIONOPERATOR MULTIPLICATION RESTADDITION .

    $default  reduce using rule 91 (RESTADDITION)


State 196

   96 RESTMULTIPLICATION: MULTIPLICATIONOPERATOR UNARY3 RESTMULTIPLICATION .

    $default  reduce using rule 96 (RESTMULTIPLICATION)


State 197

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER ':' PARAMLIST '-' '>' . RETURNTYPE

    KW_BOOL   shift, and go to state 8
    KW_CHAR   shift, and go to state 9
    KW_FLOAT  shift, and go to state 10
    KW_INT    shift, and go to state 11

    RETURNTYPE  go to state 213
    TYPE        go to state 214


State 198

   17 MOREPARAMBLOCK: ';' PARAMBLOCK . MOREPARAMBLOCK

    ';'  shift, and go to state 171

    $default  reduce using rule 16 (MOREPARAMBLOCK)

    MOREPARAMBLOCK  go to state 215


State 199

   19 MOREPARAM: ',' . PARAM MOREPARAM

    '*'  shift, and go to state 27

    $default  reduce using rule 22 (REFERENCE)

    PARAM      go to state 216
    REFERENCE  go to state 174


State 200

   15 PARAMBLOCK: TYPE PARAM MOREPARAM .

    $default  reduce using rule 15 (PARAMBLOCK)


State 201

   20 PARAM: REFERENCE IDENTIFIER . DIMENSIONBLOCK

    '['  shift, and go to state 217

    $default  reduce using rule 24 (DIMENSIONBLOCK)

    DIMENSIONBLOCK  go to state 218


State 202

   51 INDEXBLOCK: '[' INT ']' . INDEXBLOCK

    '['  shift, and go to state 139

    $default  reduce using rule 50 (INDEXBLOCK)

    INDEXBLOCK  go to state 219


State 203

   53 INITIALIZER: '=' EXPRESSION .

    $default  reduce using rule 53 (INITIALIZER)


State 204

  112 APPLICATION: '[' EXPRESSION ']' APPLICATION .

    $default  reduce using rule 112 (APPLICATION)


State 205

  115 MOREEXPRESSION: ',' EXPRESSION . MOREEXPRESSION

    ','  shift, and go to state 180

    $default  reduce using rule 114 (MOREEXPRESSION)

    MOREEXPRESSION  go to state 220


State 206

  113 APPLICATION: '(' EXPRESSION MOREEXPRESSION ')' .

    $default  reduce using rule 113 (APPLICATION)


State 207

   34 STATEMENT: KW_IF '(' EXPRESSION ')' BLOCK . elseBLOCK

    KW_ELSE  shift, and go to state 221

    $default  reduce using rule 42 (elseBLOCK)

    elseBLOCK  go to state 222


State 208

   36 STATEMENT: KW_WHILE '(' EXPRESSION ')' KW_DO . BLOCK

    '{'  shift, and go to state 22

    BLOCK  go to state 223


State 209

   38 STATEMENT: KW_SWITCH '(' EXPRESSION ')' '{' . SWITCHCASES KW_DEFAULT BLOCK '}'

    KW_CASE  shift, and go to state 224

    $default  reduce using rule 44 (SWITCHCASES)

    SWITCHCASES  go to state 225


State 210

   37 STATEMENT: KW_DO BLOCK KW_WHILE '(' EXPRESSION . ')'

    ')'  shift, and go to state 226


State 211

   59 RESTLOGICALOR: '|' '|' LOGICALAND RESTLOGICALOR .

    $default  reduce using rule 59 (RESTLOGICALOR)


State 212

   62 RESTLOGICALAND: '&' '&' BITWISEOR RESTLOGICALAND .

    $default  reduce using rule 62 (RESTLOGICALAND)


State 213

    8 FUNCTIONHEADER: MODIFIERS IDENTIFIER ':' PARAMLIST '-' '>' RETURNTYPE .

    $default  reduce using rule 8 (FUNCTIONHEADER)


State 214

   21 RETURNTYPE: TYPE . REFERENCE DIMENSIONBLOCK

    '*'  shift, and go to state 27

    $default  reduce using rule 22 (REFERENCE)

    REFERENCE  go to state 227


State 215

   17 MOREPARAMBLOCK: ';' PARAMBLOCK MOREPARAMBLOCK .

    $default  reduce using rule 17 (MOREPARAMBLOCK)


State 216

   19 MOREPARAM: ',' PARAM . MOREPARAM

    ','  shift, and go to state 199

    $default  reduce using rule 18 (MOREPARAM)

    MOREPARAM  go to state 228


State 217

   25 DIMENSIONBLOCK: '[' . ']' DIMENSIONBLOCK

    ']'  shift, and go to state 229


State 218

   20 PARAM: REFERENCE IDENTIFIER DIMENSIONBLOCK .

    $default  reduce using rule 20 (PARAM)


State 219

   51 INDEXBLOCK: '[' INT ']' INDEXBLOCK .

    $default  reduce using rule 51 (INDEXBLOCK)


State 220

  115 MOREEXPRESSION: ',' EXPRESSION MOREEXPRESSION .

    $default  reduce using rule 115 (MOREEXPRESSION)


State 221

   43 elseBLOCK: KW_ELSE . BLOCK

    '{'  shift, and go to state 22

    BLOCK  go to state 230


State 222

   34 STATEMENT: KW_IF '(' EXPRESSION ')' BLOCK elseBLOCK .

    $default  reduce using rule 34 (STATEMENT)


State 223

   36 STATEMENT: KW_WHILE '(' EXPRESSION ')' KW_DO BLOCK .

    $default  reduce using rule 36 (STATEMENT)


State 224

   45 SWITCHCASES: KW_CASE . INT BLOCK SWITCHCASES

    INT  shift, and go to state 231


State 225

   38 STATEMENT: KW_SWITCH '(' EXPRESSION ')' '{' SWITCHCASES . KW_DEFAULT BLOCK '}'

    KW_DEFAULT  shift, and go to state 232


State 226

   37 STATEMENT: KW_DO BLOCK KW_WHILE '(' EXPRESSION ')' .

    $default  reduce using rule 37 (STATEMENT)


State 227

   21 RETURNTYPE: TYPE REFERENCE . DIMENSIONBLOCK

    '['  shift, and go to state 217

    $default  reduce using rule 24 (DIMENSIONBLOCK)

    DIMENSIONBLOCK  go to state 233


State 228

   19 MOREPARAM: ',' PARAM MOREPARAM .

    $default  reduce using rule 19 (MOREPARAM)


State 229

   25 DIMENSIONBLOCK: '[' ']' . DIMENSIONBLOCK

    '['  shift, and go to state 217

    $default  reduce using rule 24 (DIMENSIONBLOCK)

    DIMENSIONBLOCK  go to state 234


State 230

   43 elseBLOCK: KW_ELSE BLOCK .

    $default  reduce using rule 43 (elseBLOCK)


State 231

   45 SWITCHCASES: KW_CASE INT . BLOCK SWITCHCASES

    '{'  shift, and go to state 22

    BLOCK  go to state 235


State 232

   38 STATEMENT: KW_SWITCH '(' EXPRESSION ')' '{' SWITCHCASES KW_DEFAULT . BLOCK '}'

    '{'  shift, and go to state 22

    BLOCK  go to state 236


State 233

   21 RETURNTYPE: TYPE REFERENCE DIMENSIONBLOCK .

    $default  reduce using rule 21 (RETURNTYPE)


State 234

   25 DIMENSIONBLOCK: '[' ']' DIMENSIONBLOCK .

    $default  reduce using rule 25 (DIMENSIONBLOCK)


State 235

   45 SWITCHCASES: KW_CASE INT BLOCK . SWITCHCASES

    KW_CASE  shift, and go to state 224

    $default  reduce using rule 44 (SWITCHCASES)

    SWITCHCASES  go to state 237


State 236

   38 STATEMENT: KW_SWITCH '(' EXPRESSION ')' '{' SWITCHCASES KW_DEFAULT BLOCK . '}'

    '}'  shift, and go to state 238


State 237

   45 SWITCHCASES: KW_CASE INT BLOCK SWITCHCASES .

    $default  reduce using rule 45 (SWITCHCASES)


State 238

   38 STATEMENT: KW_SWITCH '(' EXPRESSION ')' '{' SWITCHCASES KW_DEFAULT BLOCK '}' .

    $default  reduce using rule 38 (STATEMENT)
