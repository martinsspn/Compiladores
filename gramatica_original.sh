MODULE -> module IDENTIFIER; GLOBALS
GLOBALS -> epsilon
GLOBALS -> GLOBAL GLOBALS
GLOBALS -> extern GLOBAL GLOBALS
GLOBAL -> FUNCTION
GLOBAL -> DECLARATION
FUNCTION -> FUNCTIONHEADER FUNCTIONREST
FUNCTIONHEADER -> MODIFIERS IDENTIFIER : PARAMLIST -> RETURNTYPE
FUNCTIONREST -> ;
FUNCTIONREST -> BLOCK
MODIFIERS -> epsilon
MODIFIERS -> start
PARAMLIST -> void
PARAMLIST -> PARAMBLOCK MOREPARAMBLOCK
MOREPARAMBLOCK -> epsilon
MOREPARAMBLOCK -> ; PARAMBLOCK MOREPARAMBLOCK
MOREPARAMBLOCK -> TYPE PARAM MOREPARAM
MOREPARAM -> epsilon
MOREPARAM -> , PARAM MOREPARAM
PARAM -> REFERENCE IDENTIFIER DIMENSIONBLOCK
RETURNTYPE TYPE REFERENCE DIMENSIONBLOCK
REFERENCE -> epsilon
REFERENCE -> * REFERENCE
DIMENSIONBLOCK -> epsilon
DIMENSIONBLOCK -> [] DIMENSIONBLOCK
BLOCK -> {CODE}
CODE -> epsilon
CODE -> BLOCK CODE
CODE -> STATEMENT CODE
STATEMENT -> label IDENTIFIER;
STATEMENT -> ;
STATEMENT -> break;
STATEMENT -> continue;
STATEMENT -> EXPRESSION;
STATEMENT -> DECLARATIONBLOCK;
STATEMENT -> if (EXPRESSION) BLOCK elseBLOCK
STATEMENT -> goto IDENTIFIER;
STATEMENT -> while (EXPRESSION) do BLOCK
STATEMENT -> do BLOCK while (EXPRESSION)
STATEMENT -> switch (EXPRESSION) {SWITCHCASES default BLOCK}
STATEMENT -> return EXPRESSION;
elseBLOCK -> epsilon
elseBLOCK -> else BLOCK
SWITCHCASES -> epsilon
SWITCHCASES -> case INTLITERAL BLOCK
DECLARATIONBLOCK -> TYPE DECLARATION RESTDECLARATION
RESTDECLARATION -> epsilon
RESTDECLARATION -> , DECLARATION RESTDECLARATION
DECLARATION -> REFERENCE IDENTIFIER INDEXBLOCK INITIALIZER
INDEXBLOCK -> epsilon
INDEXBLOCK -> [INTLITERAL] INDEXBLOCK
INITIALIZER epsilon
INITIALIZER -> = EXPRESSION

EXPRESSION -> LOGICALOR RESTEXPRESSION
RESTEXPRESSION -> epsilon
RESTEXPRESSION -> = LOGICALOR RESTEXPRESSION

LOGICALOR -> LOGICALAND RESTLOGICALOR
RESTLOGICALOR -> epsilon
RESTLOGICALOR -> || LOGICALAND RESTLOGICALOR

LOGICALAND -> BITWISEOR RESTLOGICALAND
RESTLOGICALAND -> && BITWISEOR RESTLOGICALAND

BITWISEOR -> BITWISEXOR RESTBITWISEOR
RESTBITWISEOR -> epsilon
RESTBITWISEOR -> | BITWISEXOR RESTBITWISEOR

BITWISEXOR -> BITWISEAND RESTBITWISEXOR
RESTBITWISEXOR -> epsilon
RESTBITWISEXOR -> ^ BITWISEAND RESTBITWISEXOR

BITWISEAND -> EQUALITY RESTBITWISEAND
RESTBITWISEAND -> epsilon
RESTBITWISEAND -> & EQUALITY RESTBITWISEAND

EQUALITY -> RELATION RESTEQUALITY
RESTEQUALITY -> epsilon
RESTEQUALITY -> EQUALITYOPERATOR RELATION RESTEQUALITY

EQUALITYOPERATOR -> ==
EQUALITYOPERATOR -> !=

RELATION -> SHIFT RESTRELATION
RESTRELATION -> epsilon
RESTRELATION -> RELATIONOPERATOR SHIFT RESTRELATION

RELATIONOPERATOR ->  <
RELATIONOPERATOR -> <=
RELATIONOPERATOR -> >
RELATIONOPERATOR -> >=

SHIFT -> ADDITION RESTSHIFT
RESTSHIFT -> epsilon
RESTSHIFT -> SHIFTOPERATOR ADDITION RESTSHIFT

SHIFTOPERATOR -> <<
SHIFTOPERATOR -> >>

ADDITION -> MULTIPLICATION RESTADDITION
RESTADDITION -> epsilon
RESTADDITION -> ADDITIONOPERATOR MULTIPLICATION RESTADDITION
ADDITIONOPERATOR -> +
ADDITIONOPERATOR -> -
MULTIPLICATION -> UNARY3 RESTMULTIPLICATION
RESTMULTIPLICATION -> epsilon
RESTMULTIPLICATION -> MULTIPLICATIONOPERATOR UNARY3 RESTMULTIPLICATION
MULTIPLICATIONOPERATOR -> *
MULTIPLICATIONOPERATOR -> /
MULTIPLICATIONOPERATOR -> %

UNARY3 -> UNARY2
UNARY3 -> UNARY3OPERATOR UNARY2
UNARY3OPERATOR -> &
UNARY3OPERATOR -> *
UNARY3OPERATOR -> -

UNARY2 -> FACTOR
UNARY2 -> UNARY2OPERATOR FACTOR
UNARY2OPERATOR -> +
UNARY2OPERATOR -> -
UNARY2OPERATOR -> !

FACTOR -> IDENTIFIER APPLICATION
FACTOR -> IMMEDIATE
FACTOR -> (EXPRESSION)

APPLICATION -> [EXPRESSION] APPLICATION
APPLICATION -> (EXPRESSION MOREEXPRESSION)
MOREEXPRESSION -> epsilon
MOREEXPRESSION -> , EXPRESSION MOREEXPRESSION
TYPE -> bool
TYPE -> char
TYPE -> float
TYPE -> int
TYPE -> untyped
IMMEDIATE -> true
IMMEDIATE -> false
IMMEDIATE -> CHAR_LITERAL
IMMEDIATE -> FLOAT_LITERAL
IMMEDIATE -> INT_LITERAL
IMMEDIATE -> STRING_LITERAL