Nonterminal,FIRST,FOLLOW,,
MODULE,{module},{$},1,module
GLOBALS,"{'',extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",{$},2,$
,,,3,"bool,char,float,int,untyped,start,IDENTIFIER,;,{,$,extern"
,,,4,extern
GLOBAL,"{bool,char,float,int,untyped,'',start,IDENTIFIER,;,{}","{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",5,
,,,6,
FUNCTION,"{'',start,IDENTIFIER,;,{}","{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",,
FUNCTIONHEADER,"{'',start,IDENTIFIER}","{;,{}",,
FUNCTIONREST,"{;,{}","{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",,
MODIFIERS,"{'',start}",{IDENTIFIER},,
PARAMLIST,"{void,bool,char,float,int,untyped}",{=>},,
MOREPARAMBLOCK,"{'',;}",{=>},,
PARAMBLOCK,"{bool,char,float,int,untyped}","{=>,;}",,
MOREPARAM,"{'',,}","{=>,;}",,
PARAM,"{'',*,IDENTIFIER}","{=>,;,,}",,
RETURNTYPE,"{bool,char,float,int,untyped}","{;,{}",,
REFERENCE,"{'',*}","{IDENTIFIER,;,{,[]}",,
DIMENSIONBLOCK,"{'',[]}","{=>,;,,,{}",,
BLOCK,{{},"{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{,},label,break,continue,if,goto,while,do,switch,return,&,*,-,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL,else,default}",,
CODE,"{'',{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",{}},,
STATEMENT,"{label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{},{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
elseBLOCK,"{'',else}","{},{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
SWITCHCASES,"{'',case}",{default},,
DECLARATIONBLOCK,"{bool,char,float,int,untyped}",{,},
RESTDECLARATION,"{'',,}",{,},
DECLARATION,"{'',*,IDENTIFIER}","{;,,}",,
INDEXBLOCK,"{'',[}","{;,,,=}",,
INITIALIZER,"{'',=}","{;,,}",,
EXPRESSION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,],=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTEXPRESSION,"{'',=}","{),;,,,],=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
LOGICALOR,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,],||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTLOGICALOR,"{'',||}","{),;,,,=,],||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
LOGICALAND,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,],&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTLOGICALAND,"{'',&&}","{),;,,,=,||,],&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
BITWISEOR,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,],|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTBITWISEOR,"{'',|}","{),;,,,=,||,&&,],|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
BITWISEXOR,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,],^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTBITWISEXOR,"{'',^}","{),;,,,=,||,&&,|,],^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
BITWISEAND,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,],&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTBITWISEAND,"{'',&}","{),;,,,=,||,&&,|,^,],&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
EQUALITY,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,],==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTEQUALITY,"{'',==,!=}","{),;,,,=,||,&&,|,^,&,],==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
EQUALITYOPERATOR,"{==,!=}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
RELATION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,],<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTRELATION,"{'',<,<=,>,>=}","{),;,,,=,||,&&,|,^,&,==,!=,],<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RELATIONOPERATOR,"{<,<=,>,>=}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
SHIFT,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,],<<,>>,+,-,*,/,%}",,
RESTSHIFT,"{'',<<,>>}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,],<<,>>,+,-,*,/,%}",,
SHIFTOPERATOR,"{<<,>>}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
ADDITION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,],+,-,*,/,%}",,
RESTADDITION,"{'',+,-}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,],+,-,*,/,%}",,
ADDITIONOPERATOR,"{+,-}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
MULTIPLICATION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,],*,/,%}",,
RESTMULTIPLICATION,"{'',*,/,%}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,],*,/,%}",,
MULTIPLICATIONOPERATOR,"{*,/,%}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
UNARY3,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
UNARY3OPERATOR,"{&,*,-}","{IDENTIFIER,(,+,-,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
UNARY2,"{IDENTIFIER,(,+,-,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
UNARY2OPERATOR,"{+,-,!}","{IDENTIFIER,(,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
FACTOR,"{IDENTIFIER,(,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
APPLICATION,"{[,(}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
MOREEXPRESSION,"{'',,}",{)},,
TYPE,"{bool,char,float,int,untyped}","{=>,;,*,IDENTIFIER,,,{,[]}",,
IMMEDIATE,"{true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
