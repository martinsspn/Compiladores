Nonterminal,FIRST,FOLLOW,,
MODULE,{module},{$},1,module
GLOBALS,"{'',extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",{$},2,$
,,,3,"bool,char,float,int,untyped,start,IDENTIFIER,;,{,$"
,,,4,extern
GLOBAL,"{bool,char,float,int,untyped,'',start,IDENTIFIER,;,{}","{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",5,"$,extern,start,IDENTIFIER,;,{"
,,,6,"bool,char,float,int,untyped"
FUNCTION,"{'',start,IDENTIFIER,;,{}","{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",7,"$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{"
FUNCTIONHEADER,"{'',start,IDENTIFIER}","{;,{}",8,";, start, {"
FUNCTIONREST,"{;,{}","{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{}",9,SEMICOLON
,,,10,{
MODIFIERS,"{'',start}",{IDENTIFIER},11,IDENTIFIER
,,,12,START
PARAMLIST,"{void,bool,char,float,int,untyped}",{=>},13,VOID
,,,14,"bool,char,float,int,untyped"
MOREPARAMBLOCK,"{'',;}",{=>},15,{=>}
,,,16,SEMICOLON
PARAMBLOCK,"{bool,char,float,int,untyped}","{=>,;}",17,"{bool,char,float,int,untyped}"
MOREPARAM,"{'',,}","{=>,;}",18,"{=>,;}"
,,,19,COLON
PARAM,"{'',*,IDENTIFIER}","{=>,;,,}",20,"{=>,;,,}"
,,,20,*
RETURNTYPE,"{bool,char,float,int,untyped}","{;,{}",21,"{bool,char,float,int,untyped}"
REFERENCE,"{'',*}","{IDENTIFIER,;,{,[]}",22,"{IDENTIFIER,;,{,[]}"
,,,23,*
DIMENSIONBLOCK,"{'',[]}","{=>,;,,,{}",24,"{=>,;,,,{}"
,,,25,[
BLOCK,{{},"{$,extern,bool,char,float,int,untyped,start,IDENTIFIER,;,{,},label,break,continue,if,goto,while,do,switch,return,&,*,-,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL,else,default}",26,{
CODE,"{'',{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",{}},27,}
,,,28,{
,,,29,label
,,,29,SEMICOLON
,,,29,break
,,,29,continue
,,,29,if
,,,29,goto
,,,29,while
,,,29,do
,,,29,switch
,,,29,return
,,,29,IDENTIFIER
,,,29,TRUE
,,,29,FALSE
,,,29,CHAR
,,,29,FLOAT
,,,29,INT
,,,29,STRING
,,,29,(
,,,29,TCHAR
,,,29,TFLOAT
,,,29,TBOOL
,,,29,TUNTYPED
,,,29,TINT
STATEMENT,"{label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{},{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",30,label
,,,31,SEMICOLON
,,,32,break
,,,33,continue
,,,34,if
,,,35,goto
,,,36,while
,,,37,do
,,,38,switch
,,,39,return
,,,40,IDENTIFIER
,,,40,TRUE
,,,40,FALSE
,,,40,CHAR
,,,40,FLOAT
,,,40,INT
,,,40,STRING
,,,40,(
,,,41,TCHAR
,,,41,TFLOAT
,,,41,TBOOL
,,,41,TUNTYPED
,,,41,TINT
elseBLOCK,"{'',else}","{},{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",42,"{},{,label,;,break,continue,if,goto,while,do,switch,return,bool,char,float,int,untyped,&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}"
,,,43,{eles}
SWITCHCASES,"{'',case}",{default},44,{default}
,,,45,case
DECLARATIONBLOCK,"{bool,char,float,int,untyped}",{,46,"{bool,char,float,int,untyped}"
RESTDECLARATION,"{'',,}",{,47,$
,,,48,COLON
DECLARATION,"{'',*,IDENTIFIER}","{;,,}",49,"{;,,}"
,,,49,*
INDEXBLOCK,"{'',[}","{;,,,=}",50,"{;,,,=}"
,,,51,[
INITIALIZER,"{'',=}","{;,,}",52,"{;,,}"
,,,53,=
EXPRESSION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,],=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTEXPRESSION,"{'',=}","{),;,,,],=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
LOGICALOR,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,],||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTLOGICALOR,"{'',||}","{),;,,,=,],||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
LOGICALAND,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,],&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTLOGICALAND,"{'',&&}","{),;,,,=,||,],&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
BITWISEOR,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,],|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTBITWISEOR,"{'',|}","{),;,,,=,||,&&,],|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
BITWISEXOR,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,],^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTBITWISEXOR,"{'',^}","{),;,,,=,||,&&,|,],^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
BITWISEAND,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,],&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTBITWISEAND,"{'',&}","{),;,,,=,||,&&,|,^,],&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
EQUALITY,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,],==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTEQUALITY,"{'',==,!=}","{),;,,,=,||,&&,|,^,&,],==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%}",,
EQUALITYOPERATOR,"{==,!=}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
RELATION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,],<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RESTRELATION,"{'',<,<=,>,>=}","{),;,,,=,||,&&,|,^,&,==,!=,],<,<=,>,>=,<<,>>,+,-,*,/,%}",,
RELATIONOPERATOR,"{<,<=,>,>=}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
SHIFT,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,],<<,>>,+,-,*,/,%}",,
RESTSHIFT,"{'',<<,>>}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,],<<,>>,+,-,*,/,%}",,
SHIFTOPERATOR,"{<<,>>}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
ADDITION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,],+,-,*,/,%}",,
RESTADDITION,"{'',+,-}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,],+,-,*,/,%}",,
ADDITIONOPERATOR,"{+,-}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
MULTIPLICATION,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,],*,/,%}",,
RESTMULTIPLICATION,"{'',*,/,%}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,],*,/,%}",,
MULTIPLICATIONOPERATOR,"{*,/,%}","{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
UNARY3,"{&,*,-,IDENTIFIER,(,+,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
UNARY3OPERATOR,"{&,*,-}","{IDENTIFIER,(,+,-,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
UNARY2,"{IDENTIFIER,(,+,-,!,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
UNARY2OPERATOR,"{+,-,!}","{IDENTIFIER,(,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}",,
FACTOR,"{IDENTIFIER,(,true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
APPLICATION,"{[,(}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
MOREEXPRESSION,"{'',,}",{)},,
TYPE,"{bool,char,float,int,untyped}","{=>,;,*,IDENTIFIER,,,{,[]}",,
IMMEDIATE,"{true,false,CHAR_LITERAL,FLOAT_LITERAL,INT_LITERAL,STRING_LITERAL}","{),;,,,=,||,&&,|,^,&,==,!=,<,<=,>,>=,<<,>>,+,-,*,/,%,]}",,
